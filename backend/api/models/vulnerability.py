from django.db import models

class VulnerabilityAbstractModel(models.Model):
    status = models.TextField('현재상태', blank=True, default='')
    auto_result = models.CharField('자동분석결과', blank=True, max_length=10, default='')
    auto_result_reason = models.TextField('자동분석결과_검출사유', blank=True, default='')
    result = models.CharField('분석결과', max_length=10, blank=True, default='')
    check_method = models.TextField('점검방식', blank=True, default='')
    sampling = models.TextField('샘플링 자산', blank=True, default='')
    is_reported = models.BooleanField('전달', default=False, null=True)
    is_patched = models.BooleanField('조치여부', default=False, null=True)
    new_description = models.TextField('개별상세설명', blank=True, default='')
    new_solution = models.TextField('개별조치방법', blank=True, default='')
    gathering_data = models.TextField('수집정보', blank=True, default='')

    class Meta:
        abstract = True

class Vulnerability(VulnerabilityAbstractModel):
    project = models.ForeignKey('Project', on_delete=models.CASCADE,default=None)
    asset = models.ForeignKey('Asset', on_delete=models.CASCADE,default=None)
    vulnerability_item = models.ForeignKey('VulnerabilityItem',on_delete=models.CASCADE,default=None)
    is_test = models.BooleanField('분석환경',default=False,)
    needs_login = models.BooleanField('로그인',default=False)
    is_new = models.BooleanField('신규여부(신규/기존)',default=True,null=True)

    class Meta(VulnerabilityAbstractModel.Meta):
        ordering = ['asset__code', 'vulnerability_item__code']

    def reset(self):
        self.result = ''
        self.auto_result = ''
        self.auto_result_reason = ''
        self.check_method = ''
        self.sampling = ''
        self.new_description = ''
        self.new_solution = ''
        self.gathering_data = ''
        
        self.is_reported = False
        self.is_patched = False
        self.is_test = False
        self.needs_login = False
        self.is_new = False
        self.save()

    def update_status(self):
        pocObjs = self.pocs.all()
        if self.result != 'NA' :
            self.result = 'Y' if pocObjs else 'N'
        self.save()




    """
    Leacy vul model code.. 나중에 손봐야 함
    """
    def get_file_id(self):
        return '%s-%s' % (self.asset.code, self.vulnerability_item.code)

    def get_raw_lists(self):
        res = []
        sTempRes = ""
        vul_item = self.vulnerability_item
        #print(list(self.get_vuls())[0].vulnerability_item.raw_con)
        raw_cons = vul_item.raw_con.split("[!SEP!]")
        raw_names = vul_item.raw_name.split("[!SEP!]")
        guide = vul_item.guide
        cii_raw_con_1 = vul_item.cii_raw_con_1
        cii_raw_con_2 = vul_item.cii_raw_con_2
        cnt = 0
        if vul_item.area_alias == "FISM":
            for raw_con in raw_cons:
                if raw_con:
                    sTempRes += "**[ " + raw_names[cnt].replace("\n", ", ") + " ]**\n\n    " + raw_con.replace("\n", "\n    ") + "\n"
                cnt += 1
            sTempRes += "\n\n"
        if vul_item.area_alias == "SRV":
            if "WIN" in self.asset.platform:
                if len(cii_raw_con_2.splitlines())>0:
                    sTempRes +=  "**[ 주요정보통신기반시설 취약점 분석·평가 기준(WIN) ]**\n\n"
                for raw_con in cii_raw_con_2.splitlines():
                    if raw_con:
                        sTempRes +=  "    " + raw_con.replace("\n", "\n    ") + "\n"
                sTempRes += "\n\n"
            else:
                if len(cii_raw_con_1.splitlines())>0:
                    sTempRes +=  "**[ 주요정보통신기반시설 취약점 분석·평가 기준(UNIX) ]**\n\n"
                for raw_con in cii_raw_con_1.splitlines():
                    if raw_con:
                        sTempRes += "    " + raw_con.replace("\n", "\n    ") + "\n"
                sTempRes += "\n\n"
        else:
            if len(cii_raw_con_1.splitlines())>0:
                sTempRes +=  "**[ 주요정보통신기반시설 취약점 분석·평가 기준 ]**\n\n"
            for raw_con in cii_raw_con_1.splitlines():
                if raw_con:
                    sTempRes += "    " + raw_con.replace("\n", "\n    ") + "\n"
            sTempRes += "\n\n"

        if vul_item.area_alias == "FISM":
            if len(guide.strip()) > len("[금융분야 클라우드컴퓨팅서비스 이용가이드]"):
                sTempRes += "**[금융분야 클라우드컴퓨팅서비스 이용가이드]**\n\n"
                sTempRes += "    " + guide.replace("\n", "\n    ") + "\n"
        return sTempRes
    
    def is_include_image_in_status(self):
        import re
        if re.search('!\[.*\]\(.*', self.status):
            return True
        else:
            return False
